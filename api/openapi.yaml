openapi: "3.0.0"
info:
  version: 1.0.0
  title: Quote API server
servers:
  - url: http://localhost:8080
paths:
  /authors:
    post:
      requestBody:
        description: Create an author
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuthorRequest'
        required: true
      responses:
        '200':
          description: post author response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthorResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /quotes:
    post:
      requestBody:
        description: Create a quote
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuoteRequest'
        required: true
      responses:
        '200':
          description: post quote response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQuoteResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: Gets a list of Quotes.
      operationId: getQuotes
      parameters:
        - name: author
          in: query
          description: Filter by author
          required: false
          explode: true
          schema:
            type: string
            minLength: 1
            example: Charles Dickens
      responses:
        '200':
          description: get quotes response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuotesResponse'
components:
  schemas:
    CreateAuthorRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          example: Charles Dickens
      required:
        - name
    CreateAuthorResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          minLength: 36
          maxLength: 36
          example: 4357ac30-5cb3-48d3-8f97-456187004d8b
        name:
          type: string
          minLength: 1
          example: Charles Dickens
      required:
        - id
        - name
    CreateQuoteRequest:
      type: object
      properties:
        text:
          type: string
          minLength: 1
          example: hard work pays off
        author_id:
          type: string
          format: uuid
          minLength: 36
          maxLength: 36
          example: 4357ac30-5cb3-48d3-8f97-456187004d8b
      required:
        - text
        - author_id
    CreateQuoteResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          minLength: 36
          maxLength: 36
          example: 4357ac30-5cb3-48d3-8f97-456187004d8b
        text:
          type: string
          minLength: 1
          example: hard work pays off
        author_id:
          type: string
          format: uuid
          minLength: 36
          maxLength: 36
          example: 4357ac30-5cb3-48d3-8f97-456187004d8b
      required:
        - id
        - text
        - author_id
    GetQuotesResponse:
      type: array
      items:
        $ref: '#/components/schemas/CreateQuoteResponse'
      description: List of quotes.
    Detail:
      type: object
      properties:
        field:
          type: string
          description: The specific field related to the error.
          example: email
        message:
          type: string
          description: Human-readable explanation of the field error.
          example: Email must be a valid address.
      required:
        - field
        - message
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          format: int
          description: HTTP status code.
          example: 400
        message:
          type: string
          description: Human-readable summary of the error.
          example: Validation failed.
        status:
          type: string
          description: Status code for categorization, e.g., 'INVALID_ARGUMENT'.
          example: INVALID_ARGUMENT
        details:
          type: array
          items:
            $ref: '#/components/schemas/Detail'
          description: List of detailed error objects for granular issues.
      required:
        - code
        - message
        - status
